name: Deploy ITS_LIVE Monitoring
description: Deploy the ITS_LIVE Monitoring system

inputs:
  STACK_NAME:
    required: true
  CF_TEMPLATE_BUCKET:
    required: true
  LANDSAT_TOPIC_ARN:
    required: true
  SENTINEL2_TOPIC_ARN:
    required: true
  HYP3_API:
    required: true
  HYP3_JOBS_TABLE:
    required: true
  LAMBDA_LOGGING_LEVEL:
    required: true
  EARTHDATA_USERNAME:
    required: true
  EARTHDATA_PASSWORD:
    required: true
  PUBLISH_BUCKET:
    required: true
  MATTERMOST_PAT:
    required: true

runs:
  using: composite
  steps:
    - name: Install
      shell: bash
      run: make install-lambda-deps

    - name: Package and deploy
      shell: bash
      run: |
        aws cloudformation package \
          --template-file cloudformation.yml \
          --s3-bucket=${{ inputs.CF_TEMPLATE_BUCKET }} \
          --output-template-file packaged.yml

        aws cloudformation deploy \
          --template-file packaged.yml \
          --stack-name=${{ inputs.STACK_NAME }} \
          --capabilities CAPABILITY_IAM \
          --parameter-overrides \
            LandsatTopicArn=${{ inputs.LANDSAT_TOPIC_ARN }} \
            Sentinel2TopicArn=${{ inputs.SENTINEL2_TOPIC_ARN }} \
            Hyp3Api=${{ inputs.HYP3_API }} \
            Hyp3JobsTable=${{ inputs.HYP3_JOBS_TABLE }} \
            LambdaLoggingLevel=${{ inputs.LAMBDA_LOGGING_LEVEL }} \
            EarthdataUsername=${{ inputs.EARTHDATA_USERNAME }} \
            EarthdataPassword=${{ inputs.EARTHDATA_PASSWORD }} \
            PublishBucket=${{ inputs.PUBLISH_BUCKET }} \
            MattermostPAT=${{ inputs.MATTERMOST_PAT }}

        export CF_TEMPLATE_BUCKET=${{ inputs.CF_TEMPLATE_BUCKET }}
        export ITS_LIVE_MONITORING_QUEUE_ARN=$( \
          aws cloudformation describe-stacks \
          --query "Stacks[?StackName=='${{ inputs.STACK_NAME }}'][].Outputs[?OutputKey=='ItsLiveMonitoringQueueArn'].OutputValue" \
          --output text \
        )

        aws cloudformation deploy \
            --template-file its_live_monitoring/cloudformation-subscribe-in-eu.yml \
            --region=eu-west-1 \
            --stack-name=${{ inputs.STACK_NAME }} \
            --s3-bucket=${CF_TEMPLATE_BUCKET/us-west-2/eu-west-1} \
            --parameter-overrides \
              Sentinel2TopicArn=${{ inputs.SENTINEL2_TOPIC_ARN }} \
              ItsLiveMonitoringQueueArn=${ITS_LIVE_MONITORING_QUEUE_ARN}
