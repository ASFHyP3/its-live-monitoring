Parameters:

  TopicArn:
    Type: String
    Default: arn:aws:sns:us-west-2:673253540267:public-c2-notify-v2

Resources:

  Queue:
    Type: AWS::SQS::Queue
    Properties:
      MessageRetentionPeriod: 1209600
      VisibilityTimeout: 300

  QueuePolicy:
    Type: AWS::SQS::QueuePolicy
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: sns.amazonaws.com
            Action: sqs:SendMessage
            Resource: !GetAtt Queue.Arn
            Condition:
              ArnEquals:
                aws:SourceArn: !Ref TopicArn
      Queues:
        - !Ref Queue

  Subscription:
    Type: AWS::SNS::Subscription
    Properties:
      TopicArn: !Ref TopicArn
      Protocol: sqs
      Endpoint: !GetAtt Queue.Arn
      FilterPolicyScope: MessageBody
      FilterPolicy: |
        {
          "landsat_product_id": [
            {"prefix": "LC08_L1"},
            {"prefix": "LC09_L1"},
            {"prefix": "LO08_L1"},
            {"prefix": "LO09_L1"}
          ]
        }

  Lambda:
    Type: AWS::Lambda::Function
    Properties:
      Code: src/
      Handler: main.lambda_handler
      MemorySize: 128
      Role: !GetAtt LambdaRole.Arn
      Runtime: python3.12
      Timeout: 300

  LambdaEventSourceMapping:
    Type: AWS::Lambda::EventSourceMapping
    Properties:
      FunctionName: !Ref Lambda
      BatchSize: 10
      EventSourceArn: !GetAtt Queue.Arn
      MaximumBatchingWindowInSeconds: 5

  LambdaLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/lambda/${Lambda}"
      RetentionInDays: 90

  LambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          Action: sts:AssumeRole
          Principal:
            Service: lambda.amazonaws.com
          Effect: Allow
      Policies:
        - PolicyName: policy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/*"
              - Effect: Allow
                Action: sqs:*
                Resource: !GetAtt Queue.Arn
